#include <stdio.h>
int main()
{
int a = 1, b = 0;
do
{
switch (a)
{
case 1: b = 1; break;
case 2: b = 2; break;
default: b = 0;
}
b = a + b;
} while (!b);
printf("a=%d,b=%d", a, b);
return 0;
}




让我们逐步分析这个程序：

1. 变量 `a` 被初始化为 1，变量 `b` 被初始化为 0。
2. 进入 `do-while` 循环。
3. 在 `switch` 语句中，由于 `a` 的值为 1，执行 `case 1` 的代码，将 `b` 设置为 1。
4. 执行 `b = a + b;`，此时 `b` 变为 1 + 1 = 2。
5. 检查 `do-while` 循环的条件 `!b`，由于 `b` 现在是 2，条件为假，跳出循环。
6. 打印 `a` 和 `b` 的值。

因此，程序的输出将是：

 
a=1,b=2
 

这是程序执行完毕后的结果。

#include <stdio.h>

#include <math.h>

int main()

{

	float x, y, z;

	scanf_s("%f %f", &x, &y);

	z = x / y;

	while (fabs(z) > 1.0)//赋值x=2.5,y=0.5  则 z=5.0

	{

		x = y;//将y赋给x，x=y=0.5   x=y=5.0

		y = z;//同理，y=z=5.0  y=z=0.1

		z = x / y;//第一轮循环z=0.1  绝对值不再大于1，结束循环。y=5.0

	}

	printf("%.2f\n", y);//输出为保留两位小数的浮点数

	return 0;

}




